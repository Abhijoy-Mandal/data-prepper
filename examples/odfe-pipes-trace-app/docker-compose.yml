version: "3.7"
services:
  situp:
    restart: unless-stopped
    container_name: situp
    build:
      context: ../..
      dockerfile: examples/Dockerfile
    working_dir: /app
    command: sh situp-wait-for-odfe-and-start.sh
    volumes:
      - ../situp-wait-for-odfe-and-start.sh:/app/situp-wait-for-odfe-and-start.sh
      - ../trace_analytics_no_ssl.yml:/app/transformation-instance.yml
      - ../demo/root-ca.pem:/app/root-ca.pem
    ports:
      - '21890:21890'
    networks:
      - my_network
    depends_on:
      - opendistro-for-elasticsearch
  opendistro-for-elasticsearch:
    container_name: node-0.example.com
    image: 'amazon/opendistro-for-elasticsearch:1.10.1'
    ports:
      - '9200:9200'
      - '9600:9600'
    environment:
      - discovery.type=single-node
    networks:
      - my_network
  kibana:
    build:
      context: ../..
      dockerfile: examples/kibana-trace-analytics/Dockerfile
    container_name: odfe-kibana
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      ELASTICSEARCH_URL: https://node-0.example.com:9200
      ELASTICSEARCH_HOSTS: https://node-0.example.com:9200
    networks:
      - my_network
  otel-collector:
    restart: unless-stopped
    image: amazon/aws-otel-collector:latest
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./opentelemetry-collector/otel-collector-config.yml:/etc/otel-collector-config.yml
      - ../demo/demo-situp.crt:/etc/demo-situp.crt
    ports:
      - "55680:55680"
    depends_on:
      - situp
    networks:
      - my_network
  mysql:
    restart: unless-stopped
    image: mysql:latest
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    networks:
      - my_network
  python-services:
    restart: unless-stopped
    build:
      context: python-services
      dockerfile: Dockerfile
    ports:
      - '8082:8082' # inventory
      - '8083:8083' # database
      - '8084:8084' # payment
      - '8085:8085' # auth
      - '8086:8086' # recommendation
      - '8088:8088' # order
    environment:
      - OTLP=otel-collector
      - LOGS=analytics-service
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - WAIT_HOSTS=otel-collector:55680, mysql:3306
    depends_on:
      - otel-collector
      - mysql
      - analytics-service
    networks:
      - my_network
  analytics-service:
    restart: unless-stopped
    build:
      context: analytics-service
      dockerfile: Dockerfile
    ports:
      - "8087:8087"
    environment:
      - OTEL_OTLP_ENDPOINT=otel-collector:55680
      - OTEL_RESOURCE_ATTRIBUTES=service.name=analytics-service
    depends_on:
      - otel-collector
    networks:
      - my_network
  client:
    restart: unless-stopped
    build:
      context: client
      dockerfile: Dockerfile
    environment:
      - OTLP=otel-collector
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - ORDER=python-services
      - INVENTORY=python-services
      - PAYMENT=python-services
      - AUTH=python-services
      - SLEEP_TIME_IN_SECONDS=1
      - WAIT_HOSTS=python-services:8085 # auth
      - WAIT_AFTER_HOSTS=20
    depends_on:
      - otel-collector
      - python-services
      - analytics-service
    networks:
      - my_network
networks:
  my_network: