import com.amazonaws.services.s3.model.ObjectMetadata
import jp.classmethod.aws.gradle.s3.AmazonS3FileUploadTask

task uploadTarToS3 (type: AmazonS3FileUploadTask, dependsOn: createBucket) {
    dependsOn macOSDistTar
    file file(macOSDistTar.archiveFile.get().asFile.absolutePath)
    bucketName awsS3Bucket
    key macOSDistTar.archiveName

    def m = new ObjectMetadata()
    m.setCacheControl("no-cache, no-store")
    objectMetadata = m
}
task uploadTarWithJDKToS3 (type: AmazonS3FileUploadTask, dependsOn: createBucket) {
    dependsOn macOSWithJDKDistTar
    file file(macOSWithJDKDistTar.archiveFile.get().asFile.absolutePath)
    bucketName awsS3Bucket
    key macOSWithJDKDistTar.archiveName

    def m = new ObjectMetadata()
    m.setCacheControl("no-cache, no-store")
    objectMetadata = m
}
task uploadZipToS3 (type: AmazonS3FileUploadTask, dependsOn: createBucket) {
    dependsOn macOSDistZip
    file file(macOSDistZip.archiveFile.get().asFile.absolutePath)
    bucketName awsS3Bucket
    key macOSDistZip.archiveName

    def m = new ObjectMetadata()
    m.setCacheControl("no-cache, no-store")
    objectMetadata = m
}
task uploadZipWithJDKToS3 (type: AmazonS3FileUploadTask, dependsOn: createBucket) {
    dependsOn macOSWithJDKDistZip
    file file(macOSWithJDKDistZip.archiveFile.get().asFile.absolutePath)
    bucketName awsS3Bucket
    key macOSWithJDKDistZip.archiveName

    def m = new ObjectMetadata()
    m.setCacheControl("no-cache, no-store")
    objectMetadata = m
}