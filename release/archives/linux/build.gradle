import com.amazonaws.services.s3.model.ObjectMetadata
import jp.classmethod.aws.gradle.s3.AmazonS3FileUploadTask

task uploadTarToS3 (type: AmazonS3FileUploadTask, dependsOn: createBucket) {
    dependsOn linuxDistTar
    file file(linuxDistTar.archiveFile.get().asFile.absolutePath)
    bucketName awsS3Bucket
    key linuxDistTar.archiveName

    def m = new ObjectMetadata()
    m.setCacheControl("no-cache, no-store")
    objectMetadata = m
}
task uploadTarWithJDKToS3 (type: AmazonS3FileUploadTask, dependsOn: createBucket) {
    dependsOn linuxWithJDKDistTar
    file file(linuxWithJDKDistTar.archiveFile.get().asFile.absolutePath)
    bucketName awsS3Bucket
    key linuxWithJDKDistTar.archiveName

    def m = new ObjectMetadata()
    m.setCacheControl("no-cache, no-store")
    objectMetadata = m
}
task uploadZipToS3 (type: AmazonS3FileUploadTask, dependsOn: createBucket) {
    dependsOn linuxDistZip
    file file(linuxDistZip.archiveFile.get().asFile.absolutePath)
    bucketName awsS3Bucket
    key linuxDistZip.archiveName

    def m = new ObjectMetadata()
    m.setCacheControl("no-cache, no-store")
    objectMetadata = m
}

task uploadZipWithJDKToS3 (type: AmazonS3FileUploadTask, dependsOn: createBucket) {
    dependsOn linuxWithJDKDistZip
    file file(linuxWithJDKDistZip.archiveFile.get().asFile.absolutePath)
    bucketName awsS3Bucket
    key linuxWithJDKDistZip.archiveName

    def m = new ObjectMetadata()
    m.setCacheControl("no-cache, no-store")
    objectMetadata = m
}